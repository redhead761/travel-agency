#messages for exception handler. Look /handler/AuthExceptionHandler
auth.exception=Wrong username or password
disabled.exception=Account is disabled
jwt.expired.exception=JWT expired
token.format.exception=Token format is invalid
invalid.signature.exception=Invalid token signature
invalid.jwt.exception=Invalid JWT
#messages for exceptions. Look /exceptions/*
user.not.found.id=User with id {0} was not found
user.not.found.username=User with username {0} was not found
voucher.not.found=Voucher with id {0} was not found
enum.not.found.exception=Invalid value {0} for parameter {1}. Expected type: {2}
order.status=A voucher with a {0} status cannot be ordered
order.balance=Balance {0} is not enough to order
amount.not.null=Amount can't be null
amount.positive=The top-up amount must be positive
invalid.value=Field {0} contains invalid value {1}. Expected number
#messages for valid user. Look /dto/UserDTO
password.not.null=Password can't be null
password.pattern=Your password must contain upper and lower case letters and numbers, at least 7 and maximum 30 characters.Password cannot contain spaces
username.not.null=Username can't be null
username.valid=Username must contain only characters and numbers at least 3 and maximum 45 characters
username.unique=Username must be unique
user.role.valid=Invalid value {0} for parameter role. Expected type: Role
phone.pattern=Invalid phone number format. The number must start with a non-zero digit, optionally include a '+' sign, and contain up to 15 digits
phone.unique=Phone number must be unique
#messages for valid voucher. Look /dto/VoucherDTO
title.not.blank=Title is required field
title.length=Title must be between 3 and 45 characters
description.not.blank=Description is required field
price.not.blank=Price is required field
price.positive=Price must be positive
tour.type.not.blank=Tour type is required field
tour.type.valid=Invalid value {0} for parameter tourType. Expected type: TourType
transfer.type.not.blank=Transfer type is required field
transfer.type.valid=Invalid value {0} for parameter transferType. Expected type: TransferType
hotel.type.not.blank=Hotel type is required field
hotel.type.valid=Invalid value {0} for parameter hotelType. Expected type: HotelType
status.not.blank=Status is required field
status.valid=Invalid value {0} for parameter status. Expected type: VoucherStatus
arrival.not.blank=Arrival date is required field
eviction.not.blank=Eviction date is required field
hot.not.blank=Hot is required field
date.validation=Eviction date must not be before arrival date
date.future=Must be a date in the present or in the future
#messages for user controller. Look /controller/impl/UserControllerImpl
users.obtained=Users were obtained successfully
users.registered=User is successfully registered
users.updated=User is successfully updated
user.obtained=User was obtained successfully
user.status.changed=User status is successfully changed
user.role.changed=User role is successfully changed
user.balance.changed=Top-up balance successful
#messages for voucher controller. Look /controller/impl/VoucherControllerImpl
voucher.get.all=The request for getting all existed vouchers is successful
voucher.get=Voucher is successful existed
voucher.created=Voucher is successfully created
voucher.ordered=Voucher is  successfully ordered
voucher.updated=Voucher is successfully updated
voucher.deleted=Voucher has been deleted
hot.status.changed=Voucher hot status is successfully changed
voucher.status.changed=Voucher status is successfully changed
#messages for auth controller. Look /controller/impl/AuthenticationControllerImpl
successfully.auth = User is successfully authenticated
